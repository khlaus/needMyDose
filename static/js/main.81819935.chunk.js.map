{"version":3,"sources":["components/NavigationItems/NavigationItems.js","components/Layout/Layout.js","store/actions/gamesSearch.js","store/actions/actionTypes.js","store/actions/auth.js","store/actions/review.js","components/Game/Game.js","containers/GamesSearch/GamesSearch.js","containers/Review/Review.js","containers/Auth/Auth.js","containers/Auth/Logout/Logout.js","containers/GamesSearch/Popular/Popular.js","containers/MyReviews/MyReviews.js","components/Review/Review.js","containers/OneGame/OneGame.js","App.js","serviceWorker.js","store/reducers/gamesSearch.js","store/reducers/auth.js","store/reducers/review.js","index.js","components/Layout/Layout.module.css","containers/Review/Review.module.css","containers/Auth/Auth.module.css"],"names":["navigationItems","props","routes","react_default","a","createElement","Navbar_default","className","NavLink","to","isAuth","Layout","NavigationItems","this","isAuthenticated","styles","Content","children","Component","connect","state","auth","token","initPopularGamesFail","err","type","error","gamesSearchFail","authSuccess","userId","localStorage","setItem","logout","removeItem","fetchReviews","dispatch","axios","get","then","res","fetchedReviews","key","data","push","Object","objectSpread","reviews","catch","sendReviewStart","sendReviewSuccess","sendReviewFail","withRouter","Card_default","bg","text","style","width","Img","variant","src","imgSrc","Body","Title","id","title","Text","summary","Row","Col","Button_default","onClick","clickedReview","href","url","GamesSearch","searchInput","searchHandler","event","preventDefault","_this","onGamesSearch","setState","limitText","limit","arguments","length","undefined","newText","split","reduce","acc","cur","concat","join","inputChangedHandler","value","target","reviewHandler","name","history","games","onInitUpcomingGames","_this2","gamesList","margin","color","map","game","xs","sm","md","lg","Game","coverUrl","onSubmit","placeholder","onChange","loading","Container","fluid","isPopular","search","input","gamesArr","coverIds","method","headers","Accept","user-key","response","forEach","el","cover","gamesSearchSuccess","actions","initPopularGamesSuccess","Review","textArea","rating","submitHandler","reviewData","revId","Date","getTime","userName","gameId","match","params","gameName","review","onSendReview","onStarClick","nextValue","Form_default","Group","Label","Control","as","e","rows","react_star_rating_component_default","StarRating","starCount","emptyStarColor","size","role","aria-hidden","post","console","log","Auth","controls","email","password","validated","isSignin","controlName","updatedControls","defineProperty","toggleSignin","prevstate","form","currentTarget","checkValidity","stopPropagation","onAuth","authRedirect","Redirect","MainForm","noValidate","handleSubmit","autoComplete","required","Feedback","minLength","authData","idToken","localId","authFail","Logout","onLogout","Popular","onRemoveGames","MyReviews","onFetchReviews","reviewNames","reviewContent","newReviews","filter","rev","ListGroup_default","Item","action","eventKey","editing","Tab_default","Pane","noGutters","Footer","OneGame","renderGame","allReviews","toString","components_Review_Review","Row_default","Col_default","App","onTryAutoSignUp","components_Layout_Layout","Switch","Route","path","exact","component","getItem","Boolean","window","location","hostname","initialState","reducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","searchReducer","authReducer","reviewReducer","store","createStore","applyMiddleware","thunk","app","es","BrowserRouter","src_App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"mQA2CeA,EArCS,SAAAC,GACtB,IAAIC,EACFC,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAQG,UAAU,gBAChBJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAASD,UAAU,cAAcE,GAAG,KAApC,QAGAN,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAASD,UAAU,kBAAkBE,GAAG,YAAxC,WAGAN,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAASD,UAAU,qBAAqBE,GAAG,SAA3C,iBAyBJ,OApBIR,EAAMS,SACRR,EACEC,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAQG,UAAU,gBAChBJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAASD,UAAU,cAAcE,GAAG,KAApC,QAGAN,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAASD,UAAU,kBAAkBE,GAAG,YAAxC,WAGAN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACbJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAASD,UAAU,kBAAkBE,GAAG,cAAxC,cAGAN,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAASD,UAAU,YAAYE,GAAG,WAAlC,aAODN,EAAAC,EAAAC,cAAA,cAASH,IClCZS,mLAEF,OACER,EAAAC,EAAAC,cAAA,OAAKE,UAAU,sBACbJ,EAAAC,EAAAC,cAACO,EAAD,CAAiBF,OAAQG,KAAKZ,MAAMa,kBACpCX,EAAAC,EAAAC,cAAA,QAAME,UAAWQ,IAAOC,SAAUH,KAAKZ,MAAMgB,kBALhCC,aAiBNC,cANS,SAAAC,GACtB,MAAO,CACLN,gBAAsC,OAArBM,EAAMC,KAAKC,QAIjBH,CAAyBR,+CCP3BY,EAAuB,SAAAC,GAClC,MAAO,CACLC,KChBmC,0BDiBnCC,MAAOF,IA+EEG,EAAkB,SAAAH,GAC7B,MAAO,CACLC,KC9F6B,oBD+F7BC,MAAOF,IE3FEI,EAAc,SAACN,EAAOO,GAGjC,OAFAC,aAAaC,QAAQ,QAAST,GAC9BQ,aAAaC,QAAQ,SAAUF,GACxB,CACLJ,KDJwB,eCKxBH,MAAOA,EACPO,OAAQA,IAWCG,EAAS,WAGpB,OAFAF,aAAaG,WAAW,SACxBH,aAAaG,WAAW,UACjB,CACLR,KDnBuB,uBESdS,EAAe,WAC1B,OAAO,SAAAC,GACLA,EAlBK,CACLV,KFa+B,wBEM/BW,IACGC,IACC,sFAEDC,KAAK,SAAAC,GACJ,IAAMC,EAAiB,GACvB,IAAK,IAAIC,KAAOF,EAAIG,KAClBF,EAAeG,KAAfC,OAAAC,EAAA,EAAAD,CAAA,GACKL,EAAIG,KAAKD,KAIhBN,EA3BC,CACLV,KFSiC,wBERjCqB,QAyBiCN,MAE9BO,MAAM,SAAAvB,GACLW,EAxBC,CACLV,KFI8B,2BE2CrBuB,EAAkB,WAC7B,MAAO,CACLvB,KFnD6B,sBEuDpBwB,EAAoB,WAC/B,MAAO,CACLxB,KFxD+B,wBE4DtByB,EAAiB,WAC5B,MAAO,CACLzB,KF7D4B,uDGyBjB0B,cAnCF,SAAAlD,GAAK,OAChBE,EAAAC,EAAAC,cAAC+C,EAAAhD,EAAD,CACEG,UAAU,cACV8C,GAAG,OACHC,KAAK,QACLC,MAAO,CAAEC,MAAO,UAEhBrD,EAAAC,EAAAC,cAAC+C,EAAAhD,EAAKqD,IAAN,CAAUC,QAAQ,MAAMC,IAAK1D,EAAM2D,SACnCzD,EAAAC,EAAAC,cAAC+C,EAAAhD,EAAKyD,KAAN,KACE1D,EAAAC,EAAAC,cAAC+C,EAAAhD,EAAK0D,MAAN,KACE3D,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAASC,GAAI,SAAWR,EAAM8D,IAAK9D,EAAM+D,QAE3C7D,EAAAC,EAAAC,cAAC+C,EAAAhD,EAAK6D,KAAN,KAAYhE,EAAMiE,SAClB/D,EAAAC,EAAAC,cAAC8D,EAAA,EAAD,KACEhE,EAAAC,EAAAC,cAAC+D,EAAA,EAAD,KACGnE,EAAMS,OACLP,EAAAC,EAAAC,cAACgE,EAAAjE,EAAD,CAAQsD,QAAQ,UAAUY,QAASrE,EAAMsE,eAAzC,gBAIApE,EAAAC,EAAAC,cAACgE,EAAAjE,EAAD,CAAQsD,QAAQ,YAAYY,QAASrE,EAAMsE,eAA3C,sBAKJpE,EAAAC,EAAAC,cAAC+D,EAAA,EAAD,KACEjE,EAAAC,EAAAC,cAACgE,EAAAjE,EAAD,CAAQG,UAAU,cAAciE,KAAMvE,EAAMwE,IAAKf,QAAQ,WAAzD,oBC1BJgB,6MACJtD,MAAQ,CACNuD,YAAa,MASfC,cAAgB,SAAAC,GACdA,EAAMC,iBACNC,EAAK9E,MAAM+E,cAAcD,EAAK3D,MAAMuD,aACpCI,EAAKE,SAAS,CAAEN,YAAa,QAG/BO,UAAY,SAAC5B,GAAsB,IAAhB6B,EAAgBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAR,IACnBG,EAAU,GAChB,OAAIjC,EAAK+B,OAASF,GAChB7B,EAAKkC,MAAM,KAAKC,OAAO,SAACC,EAAKC,GAI3B,OAHID,EAAMC,EAAIN,OAASF,GACrBI,EAAQ5C,KAAKgD,GAERD,EAAMC,EAAIN,QAChB,GACH,GAAAO,OAAUL,EAAQM,KAAK,KAAvB,SAEKvC,KAGTwC,oBAAsB,SAAAjB,GACpB,IAAMkB,EAAQlB,EAAMmB,OAAOD,MAE3BhB,EAAKE,SAAS,CAAEN,YAAaoB,OAG/BE,cAAgB,SAAClC,EAAImC,GACfnB,EAAK9E,MAAMa,gBACbiE,EAAK9E,MAAMkG,QAAQxD,KAAK,WAAaoB,EAAK,IAAMmC,GAEhDnB,EAAK9E,MAAMkG,QAAQxD,KAAK,6FAnCrB9B,KAAKZ,MAAMmG,OACdvF,KAAKZ,MAAMoG,uDAsCN,IAAAC,EAAAzF,KACH0F,EAAY1F,KAAKZ,MAAMyB,MACzBvB,EAAAC,EAAAC,cAAA,KAAGkD,MAAO,CAAEiD,OAAQ,OAAQC,MAAO,QAAnC,0BACE,KAiBJ,OAhBI5F,KAAKZ,MAAMmG,QACbG,EAAY1F,KAAKZ,MAAMmG,MAAMM,IAAI,SAAAC,GAAI,OACnCxG,EAAAC,EAAAC,cAAC+D,EAAA,EAAD,CAAK7D,UAAU,OAAOqG,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGtE,IAAKkE,EAAK5C,IAC3D5D,EAAAC,EAAAC,cAAC2G,EAAD,CACEjD,GAAI4C,EAAK5C,GACTH,OAAQ+C,EAAKM,SACbjD,MAAO2C,EAAKT,KACZhC,QAASyC,EAAKzC,QAAUoC,EAAKpB,UAAUyB,EAAKzC,SAAW,GACvDO,IAAKkC,EAAKlC,IACV/D,OAAQ4F,EAAKrG,MAAMa,gBACnByD,cAAe,kBAAM+B,EAAKL,cAAcU,EAAK5C,GAAI4C,EAAKT,aAO5D/F,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QACbJ,EAAAC,EAAAC,cAAA,QACEE,UAAU,qCACV2G,SAAUrG,KAAK+D,eAEfzE,EAAAC,EAAAC,cAAA,SACEE,UAAU,OACVkB,KAAK,OACL0F,YAAY,0BACZC,SAAUvG,KAAKiF,oBACfC,MAAOlF,KAAKO,MAAMuD,cAEpBxE,EAAAC,EAAAC,cAAA,UAAQoB,KAAK,UACXtB,EAAAC,EAAAC,cAAA,KAAGE,UAAU,mBAGhBM,KAAKZ,MAAMoH,QACVlH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,qDACb,KAEJJ,EAAAC,EAAAC,cAACiH,EAAA,EAAD,CAAW/G,UAAU,OAAOgH,OAAK,GAC9B1G,KAAKZ,MAAMuH,UACVrH,EAAAC,EAAAC,cAAA,MAAIE,UAAU,qBACZJ,EAAAC,EAAAC,cAAA,2BAEA,KACJF,EAAAC,EAAAC,cAAC8D,EAAA,EAAD,KAAMoC,YA5FUrF,aAoHXC,cAjBS,SAAAC,GACtB,MAAO,CACLgF,MAAOhF,EAAMqG,OAAOlB,UACpB7E,MAAON,EAAMqG,OAAO/F,MACpB8F,UAAWpG,EAAMqG,OAAOD,UACxBH,QAASjG,EAAMqG,OAAOJ,QACtBvG,gBAAsC,OAArBM,EAAMC,KAAKC,QAIL,SAAAa,GACzB,MAAO,CACL6C,cAAe,SAAA0C,GAAK,OAAIvF,ELbD,SAAAuF,GACzB,OAAO,SAAAvF,GACLA,EArBK,CACLV,KCnF8B,uBDwG9B,IAAIkG,EAAW,GACXC,EAAW,GAEfxF,IAAM,CACJqC,IAAK,oEACLoD,OAAQ,OACRC,QAAS,CACPC,OAAQ,mBACRC,WAAY,oCAEdtF,KAAI,GAAAkD,OACF8B,EAAQ,WAAaA,EAAQ,KAAO,GADlC,icAIHpF,KAAK,SAAA2F,GAcJ,OAbAA,EAASvF,KAAKwF,QAAQ,SAAAC,GACpBR,EAAShF,KAAK,CACZoB,GAAIoE,EAAGpE,GACPmC,KAAMiC,EAAGjC,KACThC,QAASiE,EAAGjE,QACZO,IAAK0D,EAAG1D,MAGN0D,EAAGC,OACLR,EAASjF,KAAKwF,EAAGC,SAIdhG,IAAM,CACXqC,IACE,qEACFoD,OAAQ,OACRC,QAAS,CACPC,OAAQ,mBACRC,WAAY,oCAEdtF,KAAI,2EAAAkD,OAA6EgC,EAAS/B,KACxF,KADE,QAIHvD,KAAK,SAAA2F,GACJA,EAASvF,KAAKwF,QAAQ,SAAAE,GACpBT,EAASO,QAAQ,SAAAvB,GACXA,EAAK5C,KAAOqE,EAAMzB,OACpBA,EAAKM,SAAWmB,EAAM3D,SAI5BtC,EAjEsB,SAAAwF,GAChC,MAAO,CACLlG,KCxFgC,uBDyFhCkG,SAAUA,GA8DOU,CAAmBV,MAE7B5E,MAAM,SAAAvB,GACLW,EAASR,EAAgBH,QAG9BuB,MAAM,SAAAvB,GACLW,EAASR,EAAgBH,OK7CI8G,CAAoBZ,KACrDrB,oBAAqB,kBAAMlE,EL/FtB,SAAAA,GACL,IAAIwF,EAAW,GACXC,EAAW,GAEfzF,EAxBK,CACLV,KCLoC,6BD8BpCW,IAAM,CACJqC,IAAK,oEACLoD,OAAQ,OACRC,QAAS,CACPC,OAAQ,mBACRC,WAAY,oCAEdtF,KAAM,oCAELJ,KAAK,SAAA2F,GAcJ,OAbAA,EAASvF,KAAKwF,QAAQ,SAAAC,GACpBR,EAAShF,KAAK,CACZoB,GAAIoE,EAAGpE,GACPmC,KAAMiC,EAAGjC,KACThC,QAASiE,EAAGjE,QACZO,IAAK0D,EAAG1D,MAGN0D,EAAGC,OACLR,EAASjF,KAAKwF,EAAGC,SAIdhG,IAAM,CACXqC,IACE,qEACFoD,OAAQ,OACRC,QAAS,CACPC,OAAQ,mBACRC,WAAY,oCAEdtF,KAAI,2EAAAkD,OAA6EgC,EAAS/B,KACxF,KADE,QAIHvD,KAAK,SAAA2F,GACJA,EAASvF,KAAKwF,QAAQ,SAAAE,GACpBT,EAASO,QAAQ,SAAAvB,GACXA,EAAK5C,KAAOqE,EAAMzB,OACpBA,EAAKM,SAAWmB,EAAM3D,SAI5BtC,EAhE2B,SAAAwF,GACrC,MAAO,CACLlG,KCVsC,6BDWtCkG,SAAUA,GA6DOY,CAAwBZ,MAElC5E,MAAM,SAAAvB,GACLW,EAASZ,EAAqBC,QAGnCuB,MAAM,SAAAvB,GACLW,EAASZ,EAAqBC,WK2CvBL,CAGbuD,sDCnHI8D,6MACJpH,MAAQ,CACN8E,KAAM,GACNuC,SAAU,GACVC,OAAQ,KAGV5C,oBAAsB,SAACjB,EAAOpD,GACf,SAATA,EACFsD,EAAKE,SAAS,CAAEiB,KAAMrB,EAAMmB,OAAOD,QACjB,aAATtE,GACTsD,EAAKE,SAAS,CAAEwD,SAAU5D,EAAMmB,OAAOD,WAI3C4C,cAAgB,SAAA9D,GAEd,GADAA,EAAMC,iBACsB,KAAxBC,EAAK3D,MAAMqH,SAAiB,CAC9B,IAAMG,EAAa,CACjBC,OAAO,IAAIC,MAAOC,UAClBlH,OAAQkD,EAAK9E,MAAM4B,OACnBmH,SAAUjE,EAAK3D,MAAM8E,KACrB+C,OAAQlE,EAAK9E,MAAMiJ,MAAMC,OAAOpF,GAChCqF,SAAUrE,EAAK9E,MAAMiJ,MAAMC,OAAOjD,KAClCmD,OAAQtE,EAAK3D,MAAMqH,SACnBC,OAAQ3D,EAAK3D,MAAMsH,QAGrB3D,EAAK9E,MAAMqJ,aAAavE,EAAK9E,MAAMkG,QAASyC,OAIhDW,YAAc,SAAAC,GACZzE,EAAKE,SAAS,CAAEyD,OAAQc,6EAGjB,IAAAlD,EAAAzF,KACP,OACEV,EAAAC,EAAAC,cAACoJ,EAAArJ,EAAD,CAAMG,UAAU,MAAM2G,SAAUrG,KAAK8H,eACnCxI,EAAAC,EAAAC,cAACoJ,EAAArJ,EAAKsJ,MAAN,CAAYnJ,UAAU,yCACpBJ,EAAAC,EAAAC,cAACoJ,EAAArJ,EAAKuJ,MAAN,yBACAxJ,EAAAC,EAAAC,cAACoJ,EAAArJ,EAAKwJ,QAAN,CACErJ,UAAU,YACVsJ,GAAG,QACHzC,SAAU,SAAA0C,GAAC,OAAIxD,EAAKR,oBAAoBgE,EAAG,WAG7C3J,EAAAC,EAAAC,cAACoJ,EAAArJ,EAAKuJ,MAAN,iCAC4B,IAC1BxJ,EAAAC,EAAAC,cAAA,UAAQE,UAAU,gBACfM,KAAKZ,MAAMiJ,MAAMC,OAAOjD,OAI7B/F,EAAAC,EAAAC,cAACoJ,EAAArJ,EAAKwJ,QAAN,CACErJ,UAAU,OACVsJ,GAAG,WACHE,KAAK,IACL3C,SAAU,SAAA0C,GAAC,OAAIxD,EAAKR,oBAAoBgE,EAAG,eAE7C3J,EAAAC,EAAAC,cAACoJ,EAAArJ,EAAKuJ,MAAN,CAAYpJ,UAAU,QAAtB,kBACAJ,EAAAC,EAAAC,cAAC2J,EAAA5J,EAAD,CACEG,UAAWQ,IAAOkJ,WAClB/D,KAAK,QACLgE,UAAW,EACXnE,MAAOlF,KAAKO,MAAMsH,OAClBa,YAAa1I,KAAK0I,YAClBY,eAAgB,SAGjBtJ,KAAKZ,MAAMoH,QACVlH,EAAAC,EAAAC,cAACgE,EAAAjE,EAAD,CAAQG,UAAU,MAAMmD,QAAQ,UAAU0G,KAAK,KAAK3I,KAAK,UACvDtB,EAAAC,EAAAC,cAAA,QACEE,UAAU,mCACV8J,KAAK,SACLC,cAAY,SAJhB,UASAnK,EAAAC,EAAAC,cAACgE,EAAAjE,EAAD,CAAQG,UAAU,MAAMmD,QAAQ,UAAU0G,KAAK,KAAK3I,KAAK,UAAzD,mBAhFSP,aAwGNiC,cACbhC,YAfsB,SAAAC,GACtB,MAAO,CACLiG,QAASjG,EAAMiI,OAAOhC,QACtBxF,OAAQT,EAAMC,KAAKQ,SAII,SAAAM,GACzB,MAAO,CACLmH,aAAc,SAACnD,EAASyC,GAAV,OACZzG,EHlEoB,SAACgE,EAASyC,GAClC,OAAO,SAAAzG,GACLA,EAASa,KACTZ,IACGmI,KACC,qFACA3B,GAEDtG,KAAK,SAAAC,GACJJ,EAASc,KACTkD,EAAQxD,KAAK,OAEdI,MAAM,SAAAvB,GACLW,EAASe,KACTsH,QAAQC,IAAIjJ,MGoDL8G,CAAmBnC,EAASyC,OAKzCzH,CAGEqH,0CC9GEkC,8MACJtJ,MAAQ,CACNuJ,SAAU,CACRC,MAAO,KACPC,SAAU,MAEZC,WAAW,EACXC,UAAU,KAkBZjF,oBAAsB,SAACjB,EAAOmG,GAC5B,IAAMC,EAAerI,OAAAC,EAAA,EAAAD,CAAA,GAChBmC,EAAK3D,MAAMuJ,SADK/H,OAAAsI,EAAA,EAAAtI,CAAA,GAElBoI,EAAcnG,EAAMmB,OAAOD,QAE9BhB,EAAKE,SAAS,CAAE0F,SAAUM,OAG5BE,aAAe,WACbpG,EAAKE,SAAS,SAAAmG,GACZ,MAAO,CAAEL,UAAWK,EAAUL,yFAzBrBlG,GACX,IAAMwG,EAAOxG,EAAMyG,cACnBzG,EAAMC,kBACuB,IAAzBuG,EAAKE,gBACP1G,EAAM2G,mBAEN3K,KAAKoE,SAAS,CAAE6F,WAAW,IAC3BjK,KAAKZ,MAAMwL,OACT5K,KAAKO,MAAMuJ,SAASC,MACpB/J,KAAKO,MAAMuJ,SAASE,SACpBhK,KAAKO,MAAM2J,4CAmBR,IAAAzE,EAAAzF,KACDiK,EAAYjK,KAAKO,MACnBsK,EAAe,KAInB,OAHI7K,KAAKZ,MAAMa,kBACb4K,EAAevL,EAAAC,EAAAC,cAACsL,GAAA,EAAD,CAAUlL,GAAG,OAG5BN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QACZmL,EACDvL,EAAAC,EAAAC,cAACoJ,EAAArJ,EAAD,CACEG,UAAWQ,KAAO6K,SAClBC,YAAU,EACVf,UAAWA,EACX5D,SAAU,SAAA4C,GAAC,OAAIxD,EAAKwF,aAAahC,KAEjC3J,EAAAC,EAAAC,cAACoJ,EAAArJ,EAAKsJ,MAAN,KACEvJ,EAAAC,EAAAC,cAACoJ,EAAArJ,EAAKuJ,MAAN,qBACAxJ,EAAAC,EAAAC,cAACoJ,EAAArJ,EAAKwJ,QAAN,CACEnI,KAAK,QACL0F,YAAY,cACZ4E,aAAa,WACbC,UAAQ,EACR5E,SAAU,SAAAvC,GAAK,OAAIyB,EAAKR,oBAAoBjB,EAAO,YAErD1E,EAAAC,EAAAC,cAACoJ,EAAArJ,EAAKwJ,QAAQqC,SAAd,CAAuBxK,KAAK,WAA5B,yBAGAtB,EAAAC,EAAAC,cAACoJ,EAAArJ,EAAK6D,KAAN,0DAIF9D,EAAAC,EAAAC,cAACoJ,EAAArJ,EAAKsJ,MAAN,KACEvJ,EAAAC,EAAAC,cAACoJ,EAAArJ,EAAKuJ,MAAN,iBACAxJ,EAAAC,EAAAC,cAACoJ,EAAArJ,EAAKwJ,QAAN,CACEnI,KAAK,WACL0F,YAAY,iBACZ4E,aAAa,mBACbC,UAAQ,EACRE,UAAW,EACX9E,SAAU,SAAAvC,GAAK,OAAIyB,EAAKR,oBAAoBjB,EAAO,eAErD1E,EAAAC,EAAAC,cAACoJ,EAAArJ,EAAKwJ,QAAQqC,SAAd,CAAuBxK,KAAK,WAA5B,iDAIDZ,KAAKZ,MAAMoH,QACVlH,EAAAC,EAAAC,cAACgE,EAAAjE,EAAD,CAAQsD,QAAQ,UAAUjC,KAAK,UAA/B,SAEEtB,EAAAC,EAAAC,cAAA,QACEE,UAAU,mCACV8J,KAAK,SACLC,cAAY,UAIhBnK,EAAAC,EAAAC,cAACgE,EAAAjE,EAAD,CAAQsD,QAAQ,kBAAkBjC,KAAK,UAAvC,UAIFtB,EAAAC,EAAAC,cAACgE,EAAAjE,EAAD,CACEG,UAAU,MACVmD,QAAQ,eACRY,QAASzD,KAAKsK,cAHhB,aAKatK,KAAKO,MAAM2J,SAAW,SAAW,mBAvGrC7J,aA6HJC,eAdS,SAAAC,GACtB,MAAO,CACLiG,QAASjG,EAAMC,KAAKgG,QACpBvG,gBAAsC,OAArBM,EAAMC,KAAKC,QAIL,SAAAa,GACzB,MAAO,CACLsJ,OAAQ,SAACb,EAAOC,EAAUE,GAAlB,OACN5I,EL/Fc,SAACyI,EAAOC,EAAUE,GACpC,OAAO,SAAA5I,GACLA,EAhCK,CACLV,KDGsB,eC6BtB,IAAM0K,EAAW,CACfvB,MAAOA,EACPC,SAAUA,GAGRpG,EACF,gFAEEsG,IACFtG,EACE,kFAGJrC,IACGmI,KAAK9F,EAPO,0CAOO0H,GACnB7J,KAAK,SAAA2F,GACJ9F,EAASP,EAAYqG,EAASvF,KAAK0J,QAASnE,EAASvF,KAAK2J,YAE3DtJ,MAAM,SAAAvB,GACLgJ,QAAQC,IAAIjJ,GACZW,EAtCgB,SAAAX,GACtB,MAAO,CACLC,KDXqB,YCYrBC,MAAOF,GAmCM8K,CAAS9K,OKwEX8G,CAAasC,EAAOC,EAAUE,OAI9B5J,CAGbuJ,ICnII6B,+LAEF1L,KAAKZ,MAAMuM,4CAIX,OAAOrM,EAAAC,EAAAC,cAACsL,GAAA,EAAD,CAAUlL,GAAG,aANHS,aAgBNC,eACb,KAPyB,SAAAgB,GACzB,MAAO,CACLqK,SAAU,kBAAMrK,EAASmG,QAIdnH,CAGboL,ICnBIE,+LAEF5L,KAAKZ,MAAMyM,iDAIX,OAAOvM,EAAAC,EAAAC,cAACsL,GAAA,EAAD,CAAUlL,GAAG,aANFS,aAgBPC,eACb,KAPyB,SAAAgB,GACzB,MAAO,CACLuK,cAAe,kBAAMvK,ETuJhB,CACLV,KCnKwB,oBQebN,CAGbsL,4CCfIE,+LAEF9L,KAAKZ,MAAM2M,eAAe/L,KAAKZ,MAAMqB,MAAOT,KAAKZ,MAAM4B,yCAEhD,IAAAkD,EAAAlE,KACHgM,EAAc,GACdC,EAAgB,GACpB,GAAIjM,KAAKZ,MAAM6C,QAAS,CACtB,IAAMiK,EAAalM,KAAKZ,MAAM6C,QAAQkK,OAAO,SAAAC,GAC3C,OAAOA,EAAIpL,SAAWkD,EAAK9E,MAAM4B,SAGnC2I,QAAQC,IAAIsC,GACZF,EAAcE,EAAWrG,IAAI,SAAAuG,GAAG,OAC9B9M,EAAAC,EAAAC,cAAC6M,GAAA9M,EAAU+M,KAAX,CACE1K,IAAKwK,EAAIpE,MACTnF,QAAQ,OACR0J,QAAM,EACNC,SAAUJ,EAAIpE,OAEboE,EAAI7D,SACLjJ,EAAAC,EAAAC,cAAC2J,EAAA5J,EAAD,CACEG,UAAU,cACV2F,KAAK,QACLgE,UAAW,EACXnE,MAAOkH,EAAIvE,OACX4E,SAAS,OAKfR,EAAgBC,EAAWrG,IAAI,SAAAuG,GAAG,OAChC9M,EAAAC,EAAAC,cAACkN,GAAAnN,EAAIoN,KAAL,CAAU/K,IAAKwK,EAAIpE,MAAOwE,SAAUJ,EAAIpE,OACrCoE,EAAI5D,UAIX,OACElJ,EAAAC,EAAAC,cAACkN,GAAAnN,EAAIkH,UAAL,KACGzG,KAAKZ,MAAMoH,QACVlH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,qDACb,KACJJ,EAAAC,EAAAC,cAAC8D,EAAA,EAAD,CAAK5D,UAAU,MAAMkN,WAAS,GAC5BtN,EAAAC,EAAAC,cAAC+D,EAAA,EAAD,CAAKyC,GAAI,GACP1G,EAAAC,EAAAC,cAAC6M,GAAA9M,EAAD,KAAYyM,IAEd1M,EAAAC,EAAAC,cAAC+D,EAAA,EAAD,CAAKyC,GAAI,EAAGtG,UAAU,WACpBJ,EAAAC,EAAAC,cAACkN,GAAAnN,EAAIY,QAAL,CAAaT,UAAU,SAASuM,aA/CpB5L,aAuETC,eAhBS,SAAAC,GACtB,MAAO,CACL0B,QAAS1B,EAAMiI,OAAOvG,QACtBuE,QAASjG,EAAMiI,OAAOhC,QACtB/F,MAAOF,EAAMC,KAAKC,MAClBO,OAAQT,EAAMC,KAAKQ,SAII,SAAAM,GACzB,MAAO,CACLyK,eAAgB,SAACtL,EAAOO,GAAR,OACdM,EAASmG,QAIAnH,CAGbwL,4CCrEatD,GAXA,SAAApJ,GACb,OACEE,EAAAC,EAAAC,cAAC+C,EAAAhD,EAAD,CAAMG,UAAU,OACdJ,EAAAC,EAAAC,cAAC+C,EAAAhD,EAAK6D,KAAN,CAAW1D,UAAU,kBAAkBN,EAAMoJ,QAC7ClJ,EAAAC,EAAAC,cAAC+C,EAAAhD,EAAKsN,OAAN,KACEvN,EAAAC,EAAAC,cAAA,SAAOE,UAAU,0BAAjB,MAA8CN,EAAMiG,SCCtDyH,8MAKJ1H,cAAgB,SAAClC,EAAImC,GACfnB,EAAK9E,MAAMa,gBACbiE,EAAK9E,MAAMkG,QAAQxD,KAAK,WAAaoB,EAAK,IAAMmC,GAEhDnB,EAAK9E,MAAMkG,QAAQxD,KAAK,6FAP1B9B,KAAKZ,MAAM2M,kDAWJ,IACHjG,EAAMiH,EADHtH,EAAAzF,KAEHiC,EAAUjC,KAAKZ,MAAMoH,QACvBlH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,qDACb,KA8BJ,OA7BIM,KAAKZ,MAAMmG,QACbO,EAAO9F,KAAKZ,MAAMmG,MAAM4G,OAAO,SAAArG,GAC7B,OAAOA,EAAK5C,MAAQuC,EAAKrG,MAAMiJ,MAAMC,OAAOpF,KAE9C4C,EAAI/D,OAAAC,EAAA,EAAAD,CAAA,GAAQ+D,EAAK,IAEjBiH,EACEzN,EAAAC,EAAAC,cAAC2G,EAAD,CACEjD,GAAI4C,EAAK5C,GACTH,OAAQ+C,EAAKM,SACbjD,MAAO2C,EAAKT,KACZhC,QAASyC,EAAKzC,QACdO,IAAKkC,EAAKlC,IACV/D,OAAQG,KAAKZ,MAAMa,gBACnByD,cAAe,kBAAM+B,EAAKL,cAAcU,EAAK5C,GAAI4C,EAAKT,UAKxDrF,KAAKZ,MAAM4N,YAAchN,KAAKZ,MAAMmG,QAKtCtD,GAJAA,EAAUjC,KAAKZ,MAAM4N,WAAWb,OAC9B,SAAAC,GAAG,OAAIA,EAAIhE,SAAWtC,EAAK5C,GAAG+J,cAGdpH,IAAI,SAAAuG,GAAG,OACvB9M,EAAAC,EAAAC,cAAC0N,GAAD,CAAQtL,IAAKwK,EAAIpE,MAAOQ,OAAQ4D,EAAI5D,OAAQnD,KAAM+G,EAAIjE,cAKxD7I,EAAAC,EAAAC,cAAC2N,GAAA5N,EAAD,KACED,EAAAC,EAAAC,cAAC4N,GAAA7N,EAAD,CAAKyG,GAAI,GAAI+G,GACbzN,EAAAC,EAAAC,cAAC4N,GAAA7N,EAAD,CAAKyG,GAAI,GACP1G,EAAAC,EAAAC,cAAA,MAAIE,UAAU,gBAAd,gCACAJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,YACbuC,WArDW5B,aA2EPC,eAfS,SAAAC,GACtB,MAAO,CACLgF,MAAOhF,EAAMqG,OAAOlB,UACpBzF,gBAAsC,OAArBM,EAAMC,KAAKC,MAC5BuM,WAAYzM,EAAMiI,OAAOvG,QACzBuE,QAASjG,EAAMiI,OAAOhC,UAIC,SAAAlF,GACzB,MAAO,CACLyK,eAAgB,kBAAMzK,EAASmG,QAIpBnH,CAGbwM,IC1EIO,+LAEFrN,KAAKZ,MAAMkO,mDAIX,OACEhO,EAAAC,EAAAC,cAAC+N,EAAD,KACEjO,EAAAC,EAAAC,cAACgO,EAAA,EAAD,KACElO,EAAAC,EAAAC,cAACiO,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAW/J,IACjCvE,EAAAC,EAAAC,cAACiO,EAAA,EAAD,CAAOC,KAAK,QAAQE,UAAW/D,KAC/BvK,EAAAC,EAAAC,cAACiO,EAAA,EAAD,CAAOC,KAAK,UAAUE,UAAWlC,KACjCpM,EAAAC,EAAAC,cAACiO,EAAA,EAAD,CAAOC,KAAK,WAAWE,UAAWhC,KAClCtM,EAAAC,EAAAC,cAACiO,EAAA,EAAD,CAAOC,KAAK,aAAaE,UAAW9B,KACpCxM,EAAAC,EAAAC,cAACiO,EAAA,EAAD,CAAOC,KAAK,YAAYE,UAAWd,KACnCxN,EAAAC,EAAAC,cAACiO,EAAA,EAAD,CAAOC,KAAK,oBAAoBE,UAAWjG,aAfnCtH,aA2BHiC,eACbhC,YACE,KAPuB,SAAAgB,GACzB,MAAO,CACLgM,gBAAiB,kBAAMhM,EX0BlB,SAAAA,GACL,IAAMb,EAAQQ,aAAa4M,QAAQ,SAC7B7M,EAASC,aAAa4M,QAAQ,UAIlCvM,EAHGb,EAGMM,EAAYN,EAAOO,GAFnBG,UW1Bbb,CAGE+M,KCjCgBS,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS5F,MACvB,2FChBA6F,GAAe,CACnBxI,UAAW,KACX7E,OAAO,EACP8F,WAAW,EACXH,SAAS,GAqDI2H,GAlDC,WAAkC,IAAjC5N,EAAiCgE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzB2J,GAAc3B,EAAWhI,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAChD,OAAQ8H,EAAO3L,MACb,IdXoC,2BcYlC,OAAOmB,OAAAC,EAAA,EAAAD,CAAA,GACFxB,EADL,CAEEM,OAAO,EACP2F,SAAS,IAEb,IdhBsC,6BciBpC,OAAOzE,OAAAC,EAAA,EAAAD,CAAA,GACFxB,EADL,CAEEmF,UAAW6G,EAAOzF,SAClBH,WAAW,EACXH,SAAS,IAEb,IdtBmC,0BcuBjC,OAAOzE,OAAAC,EAAA,EAAAD,CAAA,GACFxB,EADL,CAEEM,OAAO,EACP2F,SAAS,IAEb,Id1B8B,qBc2B5B,OAAOzE,OAAAC,EAAA,EAAAD,CAAA,GACFxB,EADL,CAEEM,OAAO,EACP2F,SAAS,IAEb,Id/BgC,uBcgC9B,OAAOzE,OAAAC,EAAA,EAAAD,CAAA,GACFxB,EADL,CAEEmF,UAAW6G,EAAOzF,SAClBH,WAAW,EACXH,SAAS,IAEb,IdrC6B,oBcsC3B,OAAOzE,OAAAC,EAAA,EAAAD,CAAA,GACFxB,EADL,CAEEM,OAAO,EACP2F,SAAS,IAEb,Id1CwB,ec2CtB,OAAOzE,OAAAC,EAAA,EAAAD,CAAA,GACFxB,EADL,CAEEmF,UAAW,OAEf,QACE,OAAOnF,ICrDP2N,GAAe,CACnBzN,MAAO,KACPO,OAAQ,KACRH,OAAO,EACP2F,SAAS,GAoCI2H,GAjCC,WAAkC,IAAjC5N,EAAiCgE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzB2J,GAAc3B,EAAWhI,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAChD,OAAQ8H,EAAO3L,MACb,IfFsB,aeGpB,OAAOmB,OAAAC,EAAA,EAAAD,CAAA,GACFxB,EADL,CAEEM,OAAO,EACP2F,SAAS,IAEb,IfPwB,eeQtB,OAAOzE,OAAAC,EAAA,EAAAD,CAAA,GACFxB,EADL,CAEEE,MAAO8L,EAAO9L,MACdO,OAAQuL,EAAOvL,OACfH,OAAO,EACP2F,SAAS,IAEb,IfdqB,YeenB,OAAOzE,OAAAC,EAAA,EAAAD,CAAA,GACFxB,EADL,CAEEiG,SAAS,EACT3F,OAAO,IAEX,IfnBuB,ceoBrB,OAAOkB,OAAAC,EAAA,EAAAD,CAAA,GACFxB,EADL,CAEEE,MAAO,KACPO,OAAQ,OAEZ,QACE,OAAOT,ICpCP2N,GAAe,CACnBjM,QAAS,KACTuE,SAAS,EACT3F,OAAO,GA6CMsN,GA1CC,WAAkC,IAAjC5N,EAAiCgE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzB2J,GAAc3B,EAAWhI,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAChD,OAAQ8H,EAAO3L,MACb,IhBS+B,sBgBR7B,OAAOmB,OAAAC,EAAA,EAAAD,CAAA,GACFxB,EADL,CAEEiG,SAAS,EACT3F,OAAO,IAEX,IhBK8B,qBgBJ5B,OAAOkB,OAAAC,EAAA,EAAAD,CAAA,GACFxB,EADL,CAEEiG,SAAS,EACT3F,OAAO,IAEX,IhBFiC,wBgBG/B,OAAOkB,OAAAC,EAAA,EAAAD,CAAA,GACFxB,EADL,CAEE0B,QAASsK,EAAOtK,QAChBuE,SAAS,IAEb,IhBb6B,oBgBc3B,OAAOzE,OAAAC,EAAA,EAAAD,CAAA,GACFxB,EADL,CAEEiG,SAAS,EACT3F,OAAO,IAEX,IhBjB4B,mBgBkB1B,OAAOkB,OAAAC,EAAA,EAAAD,CAAA,GACFxB,EADL,CAEEM,OAAO,EACP2F,SAAS,IAEb,IhBxB+B,sBgByB7B,OAAOzE,OAAAC,EAAA,EAAAD,CAAA,GACFxB,EADL,CAEEiG,SAAS,IAEb,QACE,OAAOjG,IC/BP6N,GAAmBL,OAAOM,sCAAwCC,KAElEC,GAAcC,aAAgB,CAClC5H,OAAQ6H,GACRjO,KAAMkO,GACNlG,OAAQmG,KAGJC,GAAQC,aACZN,GACAH,GAAiBU,aAAgBC,QAG7BC,GACJ1P,EAAAC,EAAAC,cAACyP,EAAA,EAAD,CAAUL,MAAOA,IACftP,EAAAC,EAAAC,cAAC0P,GAAA,EAAD,KACE5P,EAAAC,EAAAC,cAAC2P,GAAD,QAKNC,IAASC,OAAOL,GAAKM,SAASC,eAAe,SJ6FvC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMjO,KAAK,SAAAkO,GACjCA,EAAaC,mCKlInBC,EAAAC,QAAA,CAAkB3P,QAAA,6CCAlB0P,EAAAC,QAAA,CAAkB1G,WAAA,gDCAlByG,EAAAC,QAAA,CAAkB/E,SAAA","file":"static/js/main.81819935.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\n// import Row from 'react-bootstrap/Row';\r\n// import Col from 'react-bootstrap/Col';\r\n\r\nconst navigationItems = props => {\r\n  let routes = (\r\n    <Navbar className=\"bg-dark mb-5\">\r\n      <NavLink className=\" text-info \" to=\"/\">\r\n        Home\r\n      </NavLink>\r\n      <NavLink className=\" text-info ml-2\" to=\"/popular\">\r\n        Popular\r\n      </NavLink>\r\n      <NavLink className=\"ml-auto text-info \" to=\"/auth\">\r\n        Authenticate\r\n      </NavLink>\r\n    </Navbar>\r\n  );\r\n  if (props.isAuth) {\r\n    routes = (\r\n      <Navbar className=\"bg-dark mb-5\">\r\n        <NavLink className=\" text-info \" to=\"/\">\r\n          Home\r\n        </NavLink>\r\n        <NavLink className=\" text-info ml-2\" to=\"/popular\">\r\n          Popular\r\n        </NavLink>\r\n        <div className=\"ml-auto \">\r\n          <NavLink className=\"mr-2  text-info\" to=\"/myReviews\">\r\n            My Reviews\r\n          </NavLink>\r\n          <NavLink className=\"text-info\" to=\"/logout\">\r\n            Logout\r\n          </NavLink>\r\n        </div>\r\n      </Navbar>\r\n    );\r\n  }\r\n  return <header>{routes}</header>;\r\n};\r\n\r\nexport default navigationItems;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport styles from \"./Layout.module.css\";\r\nimport NavigationItems from \"../NavigationItems/NavigationItems\";\r\n\r\nclass Layout extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"bg-dark text-light\">\r\n        <NavigationItems isAuth={this.props.isAuthenticated} />\r\n        <main className={styles.Content}>{this.props.children}</main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isAuthenticated: state.auth.token !== null\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Layout);\r\n","import axios from \"axios\";\r\nimport * as actionTypes from \"./actionTypes\";\r\n\r\nexport const initPopularGamesStart = err => {\r\n  return {\r\n    type: actionTypes.INIT_POPULAR_GAMES_START\r\n  };\r\n};\r\n\r\nexport const initPopularGamesSuccess = gamesArr => {\r\n  return {\r\n    type: actionTypes.INIT_POPULAR_GAMES_SUCCESS,\r\n    gamesArr: gamesArr\r\n  };\r\n};\r\n\r\nexport const initPopularGamesFail = err => {\r\n  return {\r\n    type: actionTypes.INIT_POPULAR_GAMES_FAIL,\r\n    error: err\r\n  };\r\n};\r\n\r\nexport const initPopularGames = () => {\r\n  return dispatch => {\r\n    let gamesArr = [];\r\n    let coverIds = [];\r\n\r\n    dispatch(initPopularGamesStart());\r\n\r\n    axios({\r\n      url: \"https://cors-anywhere.herokuapp.com/https://api-v3.igdb.com/games\",\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"user-key\": \"85f87f118ca4e711041d4bac342789c1\"\r\n      },\r\n      data: \"fields *; sort popularity desc;\"\r\n    })\r\n      .then(response => {\r\n        response.data.forEach(el => {\r\n          gamesArr.push({\r\n            id: el.id,\r\n            name: el.name,\r\n            summary: el.summary,\r\n            url: el.url\r\n          });\r\n\r\n          if (el.cover) {\r\n            coverIds.push(el.cover);\r\n          }\r\n        });\r\n\r\n        return axios({\r\n          url:\r\n            \"https://cors-anywhere.herokuapp.com/https://api-v3.igdb.com/covers\",\r\n          method: \"POST\",\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"user-key\": \"85f87f118ca4e711041d4bac342789c1\"\r\n          },\r\n          data: `fields alpha_channel,animated,game,height,image_id,url,width; where id=(${coverIds.join(\r\n            \",\"\r\n          )});`\r\n        })\r\n          .then(response => {\r\n            response.data.forEach(cover => {\r\n              gamesArr.forEach(game => {\r\n                if (game.id === cover.game) {\r\n                  game.coverUrl = cover.url;\r\n                }\r\n              });\r\n            });\r\n            dispatch(initPopularGamesSuccess(gamesArr));\r\n          })\r\n          .catch(err => {\r\n            dispatch(initPopularGamesFail(err));\r\n          });\r\n      })\r\n      .catch(err => {\r\n        dispatch(initPopularGamesFail(err));\r\n      });\r\n  };\r\n};\r\n\r\nexport const gamesSearchStart = () => {\r\n  return {\r\n    type: actionTypes.GAMES_SEARCH_START\r\n  };\r\n};\r\n\r\nexport const gamesSearchSuccess = gamesArr => {\r\n  return {\r\n    type: actionTypes.GAMES_SEARCH_SUCCESS,\r\n    gamesArr: gamesArr\r\n  };\r\n};\r\n\r\nexport const gamesSearchFail = err => {\r\n  return {\r\n    type: actionTypes.GAMES_SEARCH_FAIL,\r\n    error: err\r\n  };\r\n};\r\n\r\nexport const gamesSearch = input => {\r\n  return dispatch => {\r\n    dispatch(gamesSearchStart());\r\n    let gamesArr = [];\r\n    let coverIds = [];\r\n\r\n    axios({\r\n      url: \"https://cors-anywhere.herokuapp.com/https://api-v3.igdb.com/games\",\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"user-key\": \"85f87f118ca4e711041d4bac342789c1\"\r\n      },\r\n      data: `${\r\n        input ? 'search \"' + input + '\";' : \"\"\r\n      }fields cover,first_release_date,follows,franchise,franchises,game_engines,game_modes,genres,hypes,involved_companies,keywords,multiplayer_modes,name,parent_game,platforms,player_perspectives,popularity,pulse_count,rating,rating_count,release_dates,screenshots,similar_games,slug,standalone_expansions,status,storyline,summary,tags,themes,time_to_beat,total_rating,total_rating_count,updated_at,url,version_parent,version_title,videos,websites;`\r\n    })\r\n      .then(response => {\r\n        response.data.forEach(el => {\r\n          gamesArr.push({\r\n            id: el.id,\r\n            name: el.name,\r\n            summary: el.summary,\r\n            url: el.url\r\n          });\r\n\r\n          if (el.cover) {\r\n            coverIds.push(el.cover);\r\n          }\r\n        });\r\n\r\n        return axios({\r\n          url:\r\n            \"https://cors-anywhere.herokuapp.com/https://api-v3.igdb.com/covers\",\r\n          method: \"POST\",\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"user-key\": \"85f87f118ca4e711041d4bac342789c1\"\r\n          },\r\n          data: `fields alpha_channel,animated,game,height,image_id,url,width; where id=(${coverIds.join(\r\n            \",\"\r\n          )});`\r\n        })\r\n          .then(response => {\r\n            response.data.forEach(cover => {\r\n              gamesArr.forEach(game => {\r\n                if (game.id === cover.game) {\r\n                  game.coverUrl = cover.url;\r\n                }\r\n              });\r\n            });\r\n            dispatch(gamesSearchSuccess(gamesArr));\r\n          })\r\n          .catch(err => {\r\n            dispatch(gamesSearchFail(err));\r\n          });\r\n      })\r\n      .catch(err => {\r\n        dispatch(gamesSearchFail(err));\r\n      });\r\n  };\r\n};\r\n\r\nexport const removeGames = () => {\r\n  return {\r\n    type: actionTypes.REMOVE_GAMES\r\n  };\r\n};\r\n","export const INIT_POPULAR_GAMES_START = \"INIT_POPULAR_GAMES_START\";\r\nexport const INIT_POPULAR_GAMES_SUCCESS = \"INIT_POPULAR_GAMES_SUCCESS\";\r\nexport const INIT_POPULAR_GAMES_FAIL = \"INIT_POPULAR_GAMES_FAIL\";\r\n\r\nexport const GAMES_SEARCH_START = \"GAMES_SEARCH_START\";\r\nexport const GAMES_SEARCH_SUCCESS = \"GAMES_SEARCH_SUCCESS\";\r\nexport const GAMES_SEARCH_FAIL = \"GAMES_SEARCH_FAIl\";\r\nexport const REMOVE_GAMES = \"REMOVE_GAMES\";\r\n\r\nexport const AUTH_START = \"AUTH_START\";\r\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\";\r\nexport const AUTH_FAIL = \"AUTH_FAIL\";\r\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\";\r\n\r\nexport const SEND_REVIEW_INIT = \"SEND_REVIEW_INIT\";\r\nexport const SEND_REVIEW_START = \"SEND_REVIEW_START\";\r\nexport const SEND_REVIEW_SUCCESS = \"SEND_REVIEW_SUCCESS\";\r\nexport const SEND_REVIEW_FAIL = \"SEND_REVIEW_FAIL\";\r\n\r\nexport const FETCH_REVIEWS_START = \"FETCH_REVIEWS_START\";\r\nexport const FETCH_REVIEWS_SUCCESS = \"FETCH_REVIEWS_SUCCESS\";\r\nexport const FETCH_REVIEWS_FAIL = \"FETCH_REVIEWS_FAIL\";\r\n","import * as actionTypes from \"./actionTypes\";\r\n\r\nimport axios from \"axios\";\r\n\r\nexport const authStart = () => {\r\n  return {\r\n    type: actionTypes.AUTH_START\r\n  };\r\n};\r\n\r\nexport const authSuccess = (token, userId) => {\r\n  localStorage.setItem(\"token\", token);\r\n  localStorage.setItem(\"userId\", userId);\r\n  return {\r\n    type: actionTypes.AUTH_SUCCESS,\r\n    token: token,\r\n    userId: userId\r\n  };\r\n};\r\n\r\nexport const authFail = err => {\r\n  return {\r\n    type: actionTypes.AUTH_FAIL,\r\n    error: err\r\n  };\r\n};\r\n\r\nexport const logout = () => {\r\n  localStorage.removeItem(\"token\");\r\n  localStorage.removeItem(\"userId\");\r\n  return {\r\n    type: actionTypes.AUTH_LOGOUT\r\n  };\r\n};\r\n\r\nexport const auth = (email, password, isSignin) => {\r\n  return dispatch => {\r\n    dispatch(authStart());\r\n    const authData = {\r\n      email: email,\r\n      password: password\r\n    };\r\n\r\n    let url =\r\n      \"https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=\";\r\n    const apiKey = \"AIzaSyCnI8wB_TTlMA-_UJbnSaE77Z80mcaEkUw\";\r\n    if (isSignin) {\r\n      url =\r\n        \"https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=\";\r\n    }\r\n\r\n    axios\r\n      .post(url + apiKey, authData)\r\n      .then(response => {\r\n        dispatch(authSuccess(response.data.idToken, response.data.localId));\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        dispatch(authFail(err));\r\n      });\r\n  };\r\n};\r\n\r\nexport const authCheckState = () => {\r\n  return dispatch => {\r\n    const token = localStorage.getItem(\"token\");\r\n    const userId = localStorage.getItem(\"userId\");\r\n    if (!token) {\r\n      dispatch(logout());\r\n    } else {\r\n      dispatch(authSuccess(token, userId));\r\n    }\r\n  };\r\n};\r\n","import axios from \"axios\";\r\n\r\nimport * as actionTypes from \"./actionTypes\";\r\n\r\nexport const fetchReviewsStart = () => {\r\n  return {\r\n    type: actionTypes.FETCH_REVIEWS_START\r\n  };\r\n};\r\nexport const fetchReviewsSuccess = reviews => {\r\n  return {\r\n    type: actionTypes.FETCH_REVIEWS_SUCCESS,\r\n    reviews: reviews\r\n  };\r\n};\r\nexport const fetchReviewsFail = () => {\r\n  return {\r\n    type: actionTypes.FETCH_REVIEWS_FAIL\r\n  };\r\n};\r\n\r\nexport const fetchReviews = () => {\r\n  return dispatch => {\r\n    dispatch(fetchReviewsStart());\r\n\r\n    axios\r\n      .get(\r\n        \"https://cors-anywhere.herokuapp.com/https://needmydose.firebaseio.com/reviews.json\"\r\n      )\r\n      .then(res => {\r\n        const fetchedReviews = [];\r\n        for (let key in res.data) {\r\n          fetchedReviews.push({\r\n            ...res.data[key]\r\n          });\r\n        }\r\n\r\n        dispatch(fetchReviewsSuccess(fetchedReviews));\r\n      })\r\n      .catch(err => {\r\n        dispatch(fetchReviewsFail());\r\n      });\r\n  };\r\n};\r\n\r\nexport const sendReview = (history, reviewData) => {\r\n  return dispatch => {\r\n    dispatch(sendReviewStart());\r\n    axios\r\n      .post(\r\n        \"https://cors-anywhere.herokuapp.com/https://needmydose.firebaseio.com/reviews.json\",\r\n        reviewData\r\n      )\r\n      .then(res => {\r\n        dispatch(sendReviewSuccess());\r\n        history.push(\"/\");\r\n      })\r\n      .catch(err => {\r\n        dispatch(sendReviewFail());\r\n        console.log(err);\r\n      });\r\n  };\r\n};\r\n\r\nexport const sendReviewStart = () => {\r\n  return {\r\n    type: actionTypes.SEND_REVIEW_START\r\n  };\r\n};\r\n\r\nexport const sendReviewSuccess = () => {\r\n  return {\r\n    type: actionTypes.SEND_REVIEW_SUCCESS\r\n  };\r\n};\r\n\r\nexport const sendReviewFail = () => {\r\n  return {\r\n    type: actionTypes.SEND_REVIEW_FAIL\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { withRouter, NavLink } from \"react-router-dom\";\r\n\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\n\r\nconst game = props => (\r\n  <Card\r\n    className=\"w-100 h-100\"\r\n    bg=\"info\"\r\n    text=\"white\"\r\n    style={{ width: \"18rem\" }}\r\n  >\r\n    <Card.Img variant=\"top\" src={props.imgSrc} />\r\n    <Card.Body>\r\n      <Card.Title>\r\n        <NavLink to={\"/game/\" + props.id}>{props.title}</NavLink>\r\n      </Card.Title>\r\n      <Card.Text>{props.summary}</Card.Text>\r\n      <Row>\r\n        <Col>\r\n          {props.isAuth ? (\r\n            <Button variant=\"warning\" onClick={props.clickedReview}>\r\n              Write review\r\n            </Button>\r\n          ) : (\r\n            <Button variant=\"secondary\" onClick={props.clickedReview}>\r\n              Sign-In to review\r\n            </Button>\r\n          )}\r\n        </Col>\r\n        <Col>\r\n          <Button className=\"float-right\" href={props.url} variant=\"primary\">\r\n            Go to IGDB\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    </Card.Body>\r\n  </Card>\r\n);\r\n\r\nexport default withRouter(game);\r\n","import React, { Component } from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport * as actions from \"../../store/actions\";\r\nimport Game from \"../../components/Game/Game\";\r\n\r\nclass GamesSearch extends Component {\r\n  state = {\r\n    searchInput: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (!this.props.games) {\r\n      this.props.onInitUpcomingGames();\r\n    }\r\n  }\r\n\r\n  searchHandler = event => {\r\n    event.preventDefault();\r\n    this.props.onGamesSearch(this.state.searchInput);\r\n    this.setState({ searchInput: \"\" });\r\n  };\r\n\r\n  limitText = (text, limit = 320) => {\r\n    const newText = [];\r\n    if (text.length > limit) {\r\n      text.split(\" \").reduce((acc, cur) => {\r\n        if (acc + cur.length < limit) {\r\n          newText.push(cur);\r\n        }\r\n        return acc + cur.length;\r\n      }, 0);\r\n      return `${newText.join(\" \")} ...`;\r\n    }\r\n    return text;\r\n  };\r\n\r\n  inputChangedHandler = event => {\r\n    const value = event.target.value;\r\n\r\n    this.setState({ searchInput: value });\r\n  };\r\n\r\n  reviewHandler = (id, name) => {\r\n    if (this.props.isAuthenticated) {\r\n      this.props.history.push(\"/review/\" + id + \"/\" + name);\r\n    } else {\r\n      this.props.history.push(\"/auth\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let gamesList = this.props.error ? (\r\n      <p style={{ margin: \"auto\", color: \"red\" }}>Something went wrong..</p>\r\n    ) : null;\r\n    if (this.props.games) {\r\n      gamesList = this.props.games.map(game => (\r\n        <Col className=\"mb-3\" xs={12} sm={6} md={4} lg={3} key={game.id}>\r\n          <Game\r\n            id={game.id}\r\n            imgSrc={game.coverUrl}\r\n            title={game.name}\r\n            summary={game.summary ? this.limitText(game.summary) : \"\"}\r\n            url={game.url}\r\n            isAuth={this.props.isAuthenticated}\r\n            clickedReview={() => this.reviewHandler(game.id, game.name)}\r\n          />\r\n        </Col>\r\n      ));\r\n    }\r\n\r\n    return (\r\n      <div className=\"mt-3\">\r\n        <form\r\n          className=\"h-75 d-flex justify-content-center\"\r\n          onSubmit={this.searchHandler}\r\n        >\r\n          <input\r\n            className=\"w-25\"\r\n            type=\"text\"\r\n            placeholder=\"Search for videogames..\"\r\n            onChange={this.inputChangedHandler}\r\n            value={this.state.searchInput}\r\n          />\r\n          <button type=\"submit\">\r\n            <i className=\"fa fa-search\" />\r\n          </button>\r\n        </form>\r\n        {this.props.loading ? (\r\n          <div className=\"spinner-border text-primary mx-auto mt-3 d-block\" />\r\n        ) : null}\r\n\r\n        <Container className=\"mt-5\" fluid>\r\n          {this.props.isPopular ? (\r\n            <h3 className=\"text-primary m-1 \">\r\n              <u>POPULAR GAMES</u>\r\n            </h3>\r\n          ) : null}\r\n          <Row>{gamesList}</Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    games: state.search.gamesList,\r\n    error: state.search.error,\r\n    isPopular: state.search.isPopular,\r\n    loading: state.search.loading,\r\n    isAuthenticated: state.auth.token !== null\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onGamesSearch: input => dispatch(actions.gamesSearch(input)),\r\n    onInitUpcomingGames: () => dispatch(actions.initPopularGames())\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(GamesSearch);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport StarRatingComponent from \"react-star-rating-component\";\r\n\r\nimport * as actions from \"../../store/actions\";\r\nimport styles from \"./Review.module.css\";\r\n\r\nclass Review extends Component {\r\n  state = {\r\n    name: \"\",\r\n    textArea: \"\",\r\n    rating: 1\r\n  };\r\n\r\n  inputChangedHandler = (event, type) => {\r\n    if (type === \"name\") {\r\n      this.setState({ name: event.target.value });\r\n    } else if (type === \"textarea\") {\r\n      this.setState({ textArea: event.target.value });\r\n    }\r\n  };\r\n\r\n  submitHandler = event => {\r\n    event.preventDefault();\r\n    if (this.state.textArea !== \"\") {\r\n      const reviewData = {\r\n        revId: new Date().getTime(),\r\n        userId: this.props.userId,\r\n        userName: this.state.name,\r\n        gameId: this.props.match.params.id,\r\n        gameName: this.props.match.params.name,\r\n        review: this.state.textArea,\r\n        rating: this.state.rating\r\n      };\r\n\r\n      this.props.onSendReview(this.props.history, reviewData);\r\n    }\r\n  };\r\n\r\n  onStarClick = nextValue => {\r\n    this.setState({ rating: nextValue });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Form className=\"m-2\" onSubmit={this.submitHandler}>\r\n        <Form.Group className=\"d-flex flex-column align-items-center\">\r\n          <Form.Label>Enter your name:</Form.Label>\r\n          <Form.Control\r\n            className=\"w-25 mb-2\"\r\n            as=\"input\"\r\n            onChange={e => this.inputChangedHandler(e, \"name\")}\r\n          />\r\n\r\n          <Form.Label>\r\n            Write your own review for{\" \"}\r\n            <strong className=\"text-warning\">\r\n              {this.props.match.params.name}\r\n            </strong>\r\n          </Form.Label>\r\n\r\n          <Form.Control\r\n            className=\"w-75\"\r\n            as=\"textarea\"\r\n            rows=\"6\"\r\n            onChange={e => this.inputChangedHandler(e, \"textarea\")}\r\n          />\r\n          <Form.Label className=\"mt-2\">Rate the game:</Form.Label>\r\n          <StarRatingComponent\r\n            className={styles.StarRating}\r\n            name=\"rate1\"\r\n            starCount={5}\r\n            value={this.state.rating}\r\n            onStarClick={this.onStarClick}\r\n            emptyStarColor={\"#aaa\"}\r\n          />\r\n\r\n          {this.props.loading ? (\r\n            <Button className=\"m-2\" variant=\"success\" size=\"lg\" type=\"submit\">\r\n              <span\r\n                className=\"spinner-border spinner-border-lg\"\r\n                role=\"status\"\r\n                aria-hidden=\"true\"\r\n              />\r\n              Submit\r\n            </Button>\r\n          ) : (\r\n            <Button className=\"m-2\" variant=\"success\" size=\"lg\" type=\"submit\">\r\n              Submit\r\n            </Button>\r\n          )}\r\n        </Form.Group>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    loading: state.review.loading,\r\n    userId: state.auth.userId\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onSendReview: (history, reviewData) =>\r\n      dispatch(actions.sendReview(history, reviewData))\r\n  };\r\n};\r\n\r\nexport default withRouter(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(Review)\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport styles from \"./Auth.module.css\";\r\nimport * as actions from \"../../store/actions/index\";\r\n\r\nclass Auth extends Component {\r\n  state = {\r\n    controls: {\r\n      email: null,\r\n      password: null\r\n    },\r\n    validated: false,\r\n    isSignin: true\r\n  };\r\n\r\n  handleSubmit(event) {\r\n    const form = event.currentTarget;\r\n    event.preventDefault();\r\n    if (form.checkValidity() === false) {\r\n      event.stopPropagation();\r\n    } else {\r\n      this.setState({ validated: true });\r\n      this.props.onAuth(\r\n        this.state.controls.email,\r\n        this.state.controls.password,\r\n        this.state.isSignin\r\n      );\r\n    }\r\n  }\r\n\r\n  inputChangedHandler = (event, controlName) => {\r\n    const updatedControls = {\r\n      ...this.state.controls,\r\n      [controlName]: event.target.value\r\n    };\r\n    this.setState({ controls: updatedControls });\r\n  };\r\n\r\n  toggleSignin = () => {\r\n    this.setState(prevstate => {\r\n      return { isSignin: !prevstate.isSignin };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const validated = this.state;\r\n    let authRedirect = null;\r\n    if (this.props.isAuthenticated) {\r\n      authRedirect = <Redirect to=\"/\" />;\r\n    }\r\n    return (\r\n      <div className=\"ml-5\">\r\n        {authRedirect}\r\n        <Form\r\n          className={styles.MainForm}\r\n          noValidate\r\n          validated={validated}\r\n          onSubmit={e => this.handleSubmit(e)}\r\n        >\r\n          <Form.Group>\r\n            <Form.Label>Email Adress</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              placeholder=\"Enter email\"\r\n              autoComplete=\"username\"\r\n              required\r\n              onChange={event => this.inputChangedHandler(event, \"email\")}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Enter a valid e-mail.\r\n            </Form.Control.Feedback>\r\n            <Form.Text>\r\n              We will never share your email with anyone else.\r\n            </Form.Text>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Enter password\"\r\n              autoComplete=\"current-password\"\r\n              required\r\n              minLength={6}\r\n              onChange={event => this.inputChangedHandler(event, \"password\")}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Password must be at least 6 characters long.\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n          {this.props.loading ? (\r\n            <Button variant=\"success\" type=\"submit\">\r\n              Submit\r\n              <span\r\n                className=\"spinner-border spinner-border-sm\"\r\n                role=\"status\"\r\n                aria-hidden=\"true\"\r\n              />\r\n            </Button>\r\n          ) : (\r\n            <Button variant=\"outline-success\" type=\"submit\">\r\n              Submit\r\n            </Button>\r\n          )}\r\n          <Button\r\n            className=\"m-1\"\r\n            variant=\"outline-info\"\r\n            onClick={this.toggleSignin}\r\n          >\r\n            Switch to {this.state.isSignin ? \"SignUp\" : \"SignIn\"}\r\n          </Button>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    loading: state.auth.loading,\r\n    isAuthenticated: state.auth.token !== null\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onAuth: (email, password, isSignin) =>\r\n      dispatch(actions.auth(email, password, isSignin))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Auth);\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport * as actions from \"../../../store/actions\";\r\n\r\nclass Logout extends Component {\r\n  componentDidMount() {\r\n    this.props.onLogout();\r\n  }\r\n\r\n  render() {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onLogout: () => dispatch(actions.logout())\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(Logout);\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport * as actions from \"../../../store/actions\";\r\n\r\nclass Popular extends Component {\r\n  componentDidMount() {\r\n    this.props.onRemoveGames();\r\n  }\r\n\r\n  render() {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onRemoveGames: () => dispatch(actions.removeGames())\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(Popular);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport Tab from \"react-bootstrap/Tab\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\nimport StarRatingComponent from \"react-star-rating-component\";\r\n\r\nimport * as actions from \"../../store/actions\";\r\n\r\nclass MyReviews extends Component {\r\n  componentDidMount() {\r\n    this.props.onFetchReviews(this.props.token, this.props.userId);\r\n  }\r\n  render() {\r\n    let reviewNames = [];\r\n    let reviewContent = [];\r\n    if (this.props.reviews) {\r\n      const newReviews = this.props.reviews.filter(rev => {\r\n        return rev.userId === this.props.userId;\r\n      });\r\n\r\n      console.log(newReviews);\r\n      reviewNames = newReviews.map(rev => (\r\n        <ListGroup.Item\r\n          key={rev.revId}\r\n          variant=\"info\"\r\n          action\r\n          eventKey={rev.revId}\r\n        >\r\n          {rev.gameName}\r\n          <StarRatingComponent\r\n            className=\"float-right\"\r\n            name=\"rate1\"\r\n            starCount={5}\r\n            value={rev.rating}\r\n            editing={false}\r\n          />\r\n        </ListGroup.Item>\r\n      ));\r\n\r\n      reviewContent = newReviews.map(rev => (\r\n        <Tab.Pane key={rev.revId} eventKey={rev.revId}>\r\n          {rev.review}\r\n        </Tab.Pane>\r\n      ));\r\n    }\r\n    return (\r\n      <Tab.Container>\r\n        {this.props.loading ? (\r\n          <div className=\"spinner-border text-primary mx-auto mt-3 d-block\" />\r\n        ) : null}\r\n        <Row className=\"m-5\" noGutters>\r\n          <Col sm={4}>\r\n            <ListGroup>{reviewNames}</ListGroup>\r\n          </Col>\r\n          <Col sm={8} className=\"bg-info\">\r\n            <Tab.Content className=\"ml-2 \">{reviewContent}</Tab.Content>\r\n          </Col>\r\n        </Row>\r\n      </Tab.Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    reviews: state.review.reviews,\r\n    loading: state.review.loading,\r\n    token: state.auth.token,\r\n    userId: state.auth.userId\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onFetchReviews: (token, userId) =>\r\n      dispatch(actions.fetchReviews(token, userId))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(MyReviews);\r\n","import React from \"react\";\r\n\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\nconst review = props => {\r\n  return (\r\n    <Card className=\"m-2\">\r\n      <Card.Text className=\"ml-2 text-info\">{props.review}</Card.Text>\r\n      <Card.Footer>\r\n        <small className=\"text-muted float-right\">By {props.name}</small>\r\n      </Card.Footer>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default review;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nimport Game from \"../../components/Game/Game\";\r\nimport Review from \"../../components/Review/Review\";\r\nimport * as actions from \"../../store/actions/index\";\r\n\r\nclass OneGame extends Component {\r\n  componentDidMount() {\r\n    this.props.onFetchReviews();\r\n  }\r\n\r\n  reviewHandler = (id, name) => {\r\n    if (this.props.isAuthenticated) {\r\n      this.props.history.push(\"/review/\" + id + \"/\" + name);\r\n    } else {\r\n      this.props.history.push(\"/auth\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let game, renderGame;\r\n    let reviews = this.props.loading ? (\r\n      <div className=\"spinner-border text-primary mx-auto mt-3 d-block\" />\r\n    ) : null;\r\n    if (this.props.games) {\r\n      game = this.props.games.filter(game => {\r\n        return game.id === +this.props.match.params.id;\r\n      });\r\n      game = { ...game[0] };\r\n\r\n      renderGame = (\r\n        <Game\r\n          id={game.id}\r\n          imgSrc={game.coverUrl}\r\n          title={game.name}\r\n          summary={game.summary}\r\n          url={game.url}\r\n          isAuth={this.props.isAuthenticated}\r\n          clickedReview={() => this.reviewHandler(game.id, game.name)}\r\n        />\r\n      );\r\n    }\r\n\r\n    if (this.props.allReviews && this.props.games) {\r\n      reviews = this.props.allReviews.filter(\r\n        rev => rev.gameId === game.id.toString()\r\n      );\r\n\r\n      reviews = reviews.map(rev => (\r\n        <Review key={rev.revId} review={rev.review} name={rev.userName} />\r\n      ));\r\n    }\r\n\r\n    return (\r\n      <Row>\r\n        <Col sm={5}>{renderGame}</Col>\r\n        <Col sm={7}>\r\n          <h6 className=\"text-primary\">Here are our users reviews :</h6>\r\n          <hr className=\"bg-info\" />\r\n          {reviews}\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    games: state.search.gamesList,\r\n    isAuthenticated: state.auth.token !== null,\r\n    allReviews: state.review.reviews,\r\n    loading: state.review.loading\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onFetchReviews: () => dispatch(actions.fetchReviews())\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(OneGame);\r\n","import React, { Component } from \"react\";\nimport { Route, Switch, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport Layout from \"./components/Layout/Layout\";\nimport GamesSearch from \"./containers/GamesSearch/GamesSearch\";\nimport Review from \"./containers/Review/Review\";\nimport Auth from \"./containers/Auth/Auth\";\nimport Logout from \"./containers/Auth/Logout/Logout\";\nimport Popular from \"./containers/GamesSearch/Popular/Popular\";\nimport MyReviews from \"./containers/MyReviews/MyReviews\";\nimport OneGame from \"./containers/OneGame/OneGame\";\nimport * as actions from \"./store/actions\";\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onTryAutoSignUp();\n  }\n\n  render() {\n    return (\n      <Layout>\n        <Switch>\n          <Route path=\"/\" exact component={GamesSearch} />\n          <Route path=\"/auth\" component={Auth} />\n          <Route path=\"/logout\" component={Logout} />\n          <Route path=\"/popular\" component={Popular} />\n          <Route path=\"/myReviews\" component={MyReviews} />\n          <Route path=\"/game/:id\" component={OneGame} />\n          <Route path=\"/review/:id/:name\" component={Review} />\n        </Switch>\n      </Layout>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignUp: () => dispatch(actions.authCheckState())\n  };\n};\nexport default withRouter(\n  connect(\n    null,\n    mapDispatchToProps\n  )(App)\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  gamesList: null,\r\n  error: false,\r\n  isPopular: false,\r\n  loading: false\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.INIT_POPULAR_GAMES_START:\r\n      return {\r\n        ...state,\r\n        error: false,\r\n        loading: true\r\n      };\r\n    case actionTypes.INIT_POPULAR_GAMES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        gamesList: action.gamesArr,\r\n        isPopular: true,\r\n        loading: false\r\n      };\r\n    case actionTypes.INIT_POPULAR_GAMES_FAIL:\r\n      return {\r\n        ...state,\r\n        error: true,\r\n        loading: false\r\n      };\r\n    case actionTypes.GAMES_SEARCH_START:\r\n      return {\r\n        ...state,\r\n        error: false,\r\n        loading: true\r\n      };\r\n    case actionTypes.GAMES_SEARCH_SUCCESS:\r\n      return {\r\n        ...state,\r\n        gamesList: action.gamesArr,\r\n        isPopular: false,\r\n        loading: false\r\n      };\r\n    case actionTypes.GAMES_SEARCH_FAIL:\r\n      return {\r\n        ...state,\r\n        error: true,\r\n        loading: false\r\n      };\r\n    case actionTypes.REMOVE_GAMES:\r\n      return {\r\n        ...state,\r\n        gamesList: null\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  token: null,\r\n  userId: null,\r\n  error: false,\r\n  loading: false\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.AUTH_START:\r\n      return {\r\n        ...state,\r\n        error: false,\r\n        loading: true\r\n      };\r\n    case actionTypes.AUTH_SUCCESS:\r\n      return {\r\n        ...state,\r\n        token: action.token,\r\n        userId: action.userId,\r\n        error: false,\r\n        loading: false\r\n      };\r\n    case actionTypes.AUTH_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: true\r\n      };\r\n    case actionTypes.AUTH_LOGOUT:\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        userId: null\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  reviews: null,\r\n  loading: false,\r\n  error: false\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.FETCH_REVIEWS_START:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: false\r\n      };\r\n    case actionTypes.FETCH_REVIEWS_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: true\r\n      };\r\n    case actionTypes.FETCH_REVIEWS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        reviews: action.reviews,\r\n        loading: false\r\n      };\r\n    case actionTypes.SEND_REVIEW_START:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: false\r\n      };\r\n    case actionTypes.SEND_REVIEW_FAIL:\r\n      return {\r\n        ...state,\r\n        error: true,\r\n        loading: false\r\n      };\r\n    case actionTypes.SEND_REVIEW_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport { createStore, applyMiddleware, combineReducers, compose } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\n\nimport searchReducer from \"./store/reducers/gamesSearch\";\nimport authReducer from \"./store/reducers/auth\";\nimport reviewReducer from \"./store/reducers/review\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n  search: searchReducer,\n  auth: authReducer,\n  review: reviewReducer\n});\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nconst app = (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(app, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__1uOzk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"StarRating\":\"Review_StarRating__fVte7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainForm\":\"Auth_MainForm__1r1xN\"};"],"sourceRoot":""}